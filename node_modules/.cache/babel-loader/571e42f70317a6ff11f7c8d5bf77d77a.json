{"ast":null,"code":"import _objectSpread from \"/home/pavel/Desktop/React/unShiftTest/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport apiRequests from './../api/api';\nconst SET_POSTS = 'SET_POSTS';\nconst ADD_POST = 'ADD_POST';\nconst CHANGE_EDITABLE_POST = 'CHANGE_EDITABLE_POST';\nconst CHANGE_POST = 'EDIT_POST';\nconst DELETE_POST = 'DELETE_POST';\nconst ADD_COMMENT = 'ADD_COMMENT';\nconst initialState = {\n  postsData: [],\n  editablePost: null\n};\n\nconst appReducer = (appData = initialState, action) => {\n  switch (action.type) {\n    case SET_POSTS:\n      {\n        return _objectSpread({}, appData, {\n          postsData: action.posts\n        });\n      }\n\n    case ADD_POST:\n      {\n        return _objectSpread({}, appData, {\n          postsData: [...appData.postsData, _objectSpread({\n            id: appData.postsData.length + 1\n          }, action.post)]\n        });\n      }\n\n    case CHANGE_EDITABLE_POST:\n      {\n        return _objectSpread({}, appData, {\n          editablePost: action.post\n        });\n      }\n\n    case CHANGE_POST:\n      {\n        return _objectSpread({}, appData, {\n          postsData: appData.postsData.map(post => {\n            return post.id !== action.post.id ? post : _objectSpread({}, action.post);\n          })\n        });\n      }\n\n    case DELETE_POST:\n      {\n        return _objectSpread({}, appData, {\n          postsData: appData.postsData.filter(post => {\n            return post.id !== action.postId ? true : false;\n          })\n        });\n      }\n\n    case ADD_COMMENT:\n      {\n        return _objectSpread({}, appData, {\n          commentsData: [...appData.commentsData, action.comment]\n        });\n      }\n\n    default:\n      return appData;\n  }\n};\n\nexport const setPosts = posts => {\n  debugger;\n  return {\n    type: SET_POSTS,\n    posts\n  };\n};\nexport const addPost = post => {\n  return {\n    type: ADD_POST,\n    post\n  };\n};\nexport const changeEditablePost = post => {\n  return {\n    type: CHANGE_EDITABLE_POST,\n    post\n  };\n};\nexport const changePost = post => {\n  return {\n    type: CHANGE_POST,\n    post\n  };\n};\nexport const deletePost = postId => {\n  return {\n    type: DELETE_POST,\n    postId\n  };\n};\nexport const addComment = comment => {\n  return {\n    type: ADD_POST,\n    comment\n  };\n};\nexport const getPostsTC = () => dispatch => {\n  apiRequests.getPostsData().then(data => {\n    return Promise.all(data.map(post => apiRequests.getComments(post.id)));\n  }).then(posts => {\n    setPosts(posts);\n  });\n};\nexport const addPostTC = post => dispatch => {\n  apiRequests.addPost(post).then(dispatch(addPost(post)));\n};\nexport const changePostTC = post => dispatch => {\n  apiRequests.updatePost(post).then(dispatch(changePost(post)));\n};\nexport const deletePostTC = postId => dispatch => {\n  apiRequests.deletePost(postId).then(data => dispatch(deletePost(postId)));\n};\nexport const addCommentTC = comment => dispatch => {\n  //запрос\n  dispatch(addComment(comment));\n};\nexport default appReducer;","map":{"version":3,"sources":["/home/pavel/Desktop/React/unShiftTest/src/redux/app-reducer.js"],"names":["apiRequests","SET_POSTS","ADD_POST","CHANGE_EDITABLE_POST","CHANGE_POST","DELETE_POST","ADD_COMMENT","initialState","postsData","editablePost","appReducer","appData","action","type","posts","id","length","post","map","filter","postId","commentsData","comment","setPosts","addPost","changeEditablePost","changePost","deletePost","addComment","getPostsTC","dispatch","getPostsData","then","data","Promise","all","getComments","addPostTC","changePostTC","updatePost","deletePostTC","addCommentTC"],"mappings":"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","sourcesContent":["import apiRequests from './../api/api';\n\nconst SET_POSTS = 'SET_POSTS';\nconst ADD_POST = 'ADD_POST';\nconst CHANGE_EDITABLE_POST = 'CHANGE_EDITABLE_POST';\nconst CHANGE_POST = 'EDIT_POST';\nconst DELETE_POST = 'DELETE_POST';\nconst ADD_COMMENT = 'ADD_COMMENT';\n\nconst initialState = {\n    postsData: [],\n    editablePost: null,\n};\n\nconst appReducer = (appData = initialState, action) => {\n    switch (action.type) {\n        case SET_POSTS: {\n            return {\n                ...appData,\n                postsData: action.posts,\n            }\n        }\n\n        case ADD_POST: {\n            return {\n                ...appData,\n                postsData: [...appData.postsData, {id: appData.postsData.length + 1, ...action.post}],\n            }\n        }   \n        \n        case CHANGE_EDITABLE_POST: {\n            return {\n                ...appData,\n                editablePost: action.post,\n            }\n        }\n        \n        case CHANGE_POST: {\n            return {\n                ...appData,\n                postsData: appData.postsData.map(post => {\n                    return post.id !== action.post.id ? post : {...action.post, } \n                })\n            }\n        } \n\n        case DELETE_POST: {\n            return {\n                ...appData,\n                postsData: appData.postsData.filter(post => {\n                    return post.id !== action.postId ? true : false \n                })\n            }\n        }\n\n        case ADD_COMMENT: {\n            return {\n                ...appData,\n                commentsData: [...appData.commentsData, action.comment],\n            }\n        }\n\n        default: return appData;\n    }\n\n}\n\nexport const setPosts = (posts) => {\n    debugger;\n    return {\n        type: SET_POSTS,\n        posts\n    }\n}\n\nexport const addPost = (post) => {\n    return {\n        type: ADD_POST,\n        post\n    }\n}\n\nexport const changeEditablePost = (post) => {\n    return {\n        type: CHANGE_EDITABLE_POST,\n        post\n    }\n}\n\nexport const changePost = (post) => {\n    return {\n        type: CHANGE_POST,\n        post\n    }\n}\n\nexport const deletePost = (postId) => {\n    return {\n        type: DELETE_POST,\n        postId\n    }\n}\n\nexport const addComment = (comment) => {\n    return {\n        type: ADD_POST,\n        comment\n    }\n}\n\nexport const getPostsTC = () => (dispatch) => {\n    apiRequests.getPostsData()\n    .then(data => {\n        return Promise.all(data.map(post => apiRequests.getComments(post.id)))\n        \n    }).then((posts) => {\n        setPosts(posts);\n      }); \n    \n}\n\nexport const addPostTC = (post) => (dispatch) => {\n    apiRequests.addPost(post)\n    .then(dispatch(addPost(post)));\n}\n\nexport const changePostTC = (post) => (dispatch) => {\n    apiRequests.updatePost(post)\n    .then(dispatch(changePost(post)));\n}\n\nexport const deletePostTC = (postId) => (dispatch) => {\n    apiRequests.deletePost(postId)\n    .then(data => dispatch(deletePost(postId)));\n}\n\nexport const addCommentTC = (comment) => (dispatch) => {\n    //запрос\n    dispatch(addComment(comment));\n}\n\nexport default appReducer;"]},"metadata":{},"sourceType":"module"}