{"ast":null,"code":"var _jsxFileName = \"/home/pavel/Desktop/React/unShiftTest/src/components/Posts/PostForm.jsx\";\nimport React from 'react';\nimport { compose } from 'redux';\nimport { withRouter, NavLink } from 'react-router-dom';\nimport { Form, Card } from 'semantic-ui-react';\nimport { TextArea, InputField } from 'react-semantic-redux-form';\nimport { Field, reduxForm } from 'redux-form';\n\nconst PostForm = props => {\n  const postsData = props.postsData,\n        handleSubmit = props.handleSubmit,\n        initialize = props.initialize,\n        reset = props.reset,\n        postId = props.match.params.postId;\n  React.useEffect(() => {\n    if (postId) initialize(postsData.find(post => post.id === +postId));\n  }, [postId, postsData, initialize]);\n\n  const onSubmit = () => {\n    handleSubmit();\n    reset();\n  };\n\n  return React.createElement(Card, {\n    fluid: true,\n    style: {\n      top: '30%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Card.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, postId ? 'Edit post' : 'Add post'), React.createElement(Form, {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"title\",\n    component: InputField,\n    placeholder: \"Enter post Title...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"body\",\n    component: TextArea,\n    placeholder: \"Enter post body...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(NavLink, {\n    exact: true,\n    to: \"/\",\n    className: \"ui button\",\n    onClick: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, postId ? 'Save' : 'Add'), postId && React.createElement(NavLink, {\n    exact: true,\n    to: \"/\",\n    className: \"ui button\",\n    onClick: reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Cancel\"))));\n};\n\nexport default compose(reduxForm({\n  form: 'post'\n}), withRouter)(PostForm);","map":{"version":3,"sources":["/home/pavel/Desktop/React/unShiftTest/src/components/Posts/PostForm.jsx"],"names":["React","compose","withRouter","NavLink","Form","Card","TextArea","InputField","Field","reduxForm","PostForm","props","postsData","handleSubmit","initialize","reset","postId","match","params","useEffect","find","post","id","onSubmit","top","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,kBAApC;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,mBAA3B;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,2BAArC;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA,QAClBC,SADkB,GAC4DD,KAD5D,CAClBC,SADkB;AAAA,QACPC,YADO,GAC4DF,KAD5D,CACPE,YADO;AAAA,QACOC,UADP,GAC4DH,KAD5D,CACOG,UADP;AAAA,QACmBC,KADnB,GAC4DJ,KAD5D,CACmBI,KADnB;AAAA,QAC6CC,MAD7C,GAC4DL,KAD5D,CAC0BM,KAD1B,CACmCC,MADnC,CAC6CF,MAD7C;AAG1BhB,EAAAA,KAAK,CAACmB,SAAN,CAAgB,MAAM;AACpB,QAAGH,MAAH,EAAWF,UAAU,CAACF,SAAS,CAACQ,IAAV,CAAeC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAY,CAACN,MAApC,CAAD,CAAV;AACZ,GAFD,EAEG,CAACA,MAAD,EAASJ,SAAT,EAAoBE,UAApB,CAFH;;AAIA,QAAMS,QAAQ,GAAG,MAAM;AACrBV,IAAAA,YAAY;AACZE,IAAAA,KAAK;AACN,GAHD;;AAKA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAY,IAAA,KAAK,EAAE;AAACS,MAAAA,GAAG,EAAE;AAAN,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcR,MAAM,GAAG,WAAH,GAAiB,UAArC,CADF,EAEE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEO,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AACe,IAAA,SAAS,EAAEhB,UAD1B;AAEE,IAAA,WAAW,EAAC,qBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAME,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AACc,IAAA,SAAS,EAAED,QADzB;AAEE,IAAA,WAAW,EAAC,oBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,EAWE,oBAAC,OAAD;AAAS,IAAA,KAAK,MAAd;AAAe,IAAA,EAAE,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAC,WAAhC;AAA4C,IAAA,OAAO,EAAEiB,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,MAAM,GAAG,MAAH,GAAY,KADvB,CAXF,EAcIA,MAAM,IACR,oBAAC,OAAD;AAAS,IAAA,KAAK,MAAd;AAAe,IAAA,EAAE,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAC,WAAhC;AAA4C,IAAA,OAAO,EAAED,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,CAFF,CADF,CADF;AA0BD,CAtCD;;AAwCA,eAAed,OAAO,CACpBQ,SAAS,CAAC;AAACgB,EAAAA,IAAI,EAAE;AAAP,CAAD,CADW,EAEpBvB,UAFoB,CAAP,CAGbQ,QAHa,CAAf","sourcesContent":["import React from 'react';\nimport { compose } from 'redux';\nimport { withRouter, NavLink } from 'react-router-dom';\nimport { Form, Card } from 'semantic-ui-react';\nimport { TextArea, InputField } from 'react-semantic-redux-form';\nimport { Field, reduxForm } from 'redux-form';\n\nconst PostForm = (props) => {\n  const { postsData, handleSubmit, initialize, reset, match: { params: { postId } } } = props;\n\n  React.useEffect(() => {\n    if(postId) initialize(postsData.find(post => post.id === +postId))\n  }, [postId, postsData, initialize]);\n\n  const onSubmit = () => {\n    handleSubmit();\n    reset();\n  }\n\n  return (\n    <Card fluid style={{top: '30%'}}>\n      <Card.Content>\n        <Card.Header>{postId ? 'Edit post' : 'Add post'}</Card.Header>\n        <Form onSubmit={onSubmit}>\n          <Form.Field>\n            <Field \n              name='title' component={InputField}\n              placeholder='Enter post Title...' />\n          </Form.Field>\n          <Form.Field>\n            <Field \n              name='body' component={TextArea} \n              placeholder='Enter post body...' />\n          </Form.Field>\n          <NavLink exact to='/' className=\"ui button\" onClick={onSubmit}>\n              {postId ? 'Save' : 'Add'}\n          </NavLink>\n          { postId && \n          <NavLink exact to='/' className=\"ui button\" onClick={reset}>\n              Cancel\n          </NavLink>}\n        </Form>\n      </Card.Content>\n    </Card>\n  );\n}\n\nexport default compose(\n  reduxForm({form: 'post'}),\n  withRouter,\n)(PostForm);\n"]},"metadata":{},"sourceType":"module"}