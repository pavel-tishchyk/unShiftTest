{"ast":null,"code":"var _jsxFileName = \"/home/pavel/Desktop/React/unShiftTest/src/components/Container.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { postsDataSelector } from '../redux/app-selectors';\nimport { getPostsTC, deletePostTC } from '../redux/app-reducer';\nimport { Grid } from 'semantic-ui-react';\nimport PostForm from './Posts/PostForm';\nimport Posts from './Posts/Posts';\n\nconst Container = props => {\n  const postsData = props.postsData,\n        getPostsData = props.getPostsData,\n        deletePost = props.deletePost;\n  React.useEffect(() => {\n    getPostsData();\n  }, [getPostsData]);\n  return React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/edit/:postId?\",\n    render: () => React.createElement(PostFrom, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(Posts, {\n    postsData: postsData,\n    deletePost: deletePost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    postsData: postsDataSelector(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getPostsData: () => dispatch(getPostsTC()),\n    deletePost: postId => dispatch(deletePostTC(postId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Container);","map":{"version":3,"sources":["/home/pavel/Desktop/React/unShiftTest/src/components/Container.jsx"],"names":["React","Route","connect","postsDataSelector","getPostsTC","deletePostTC","Grid","PostForm","Posts","Container","props","postsData","getPostsData","deletePost","useEffect","mapStateToProps","state","mapDispatchToProps","dispatch","postId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,wBAAlC;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,sBAAzC;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,eAAlB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA,QACnBC,SADmB,GACqBD,KADrB,CACnBC,SADmB;AAAA,QACRC,YADQ,GACqBF,KADrB,CACRE,YADQ;AAAA,QACMC,UADN,GACqBH,KADrB,CACMG,UADN;AAG3Bb,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAK;AACnBF,IAAAA,YAAY;AACb,GAFD,EAEE,CAACA,YAAD,CAFF;AAIA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,gBAAZ;AAA6B,IAAA,MAAM,EAAE,MAAM,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAED,SADb;AAEE,IAAA,UAAU,EAAEE,UAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAQD,CAfD;;AAiBA,MAAME,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLL,IAAAA,SAAS,EAAER,iBAAiB,CAACa,KAAD;AADvB,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLN,IAAAA,YAAY,EAAE,MAAMM,QAAQ,CAACd,UAAU,EAAX,CADvB;AAELS,IAAAA,UAAU,EAAGM,MAAD,IAAYD,QAAQ,CAACb,YAAY,CAACc,MAAD,CAAb;AAF3B,GAAP;AAID,CALD;;AAOA,eAAejB,OAAO,CAACa,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CR,SAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { postsDataSelector } from '../redux/app-selectors';\nimport { getPostsTC, deletePostTC } from '../redux/app-reducer';\nimport { Grid } from 'semantic-ui-react';\nimport PostForm from './Posts/PostForm';\nimport Posts from './Posts/Posts';\n\nconst Container = (props) => {\n  const { postsData, getPostsData, deletePost } = props;\n\n  React.useEffect(()=> {\n    getPostsData();\n  },[getPostsData])\n\n  return (\n    <Grid>\n      <Route path='/edit/:postId?' render={() => <PostFrom />} />\n      <Posts \n        postsData={postsData} \n        deletePost={deletePost}/>\n    </Grid>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    postsData: postsDataSelector(state),\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getPostsData: () => dispatch(getPostsTC()),\n    deletePost: (postId) => dispatch(deletePostTC(postId)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Container);"]},"metadata":{},"sourceType":"module"}