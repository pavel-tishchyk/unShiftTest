{"ast":null,"code":"import React from'react';import{compose}from'redux';import{withRouter,NavLink}from'react-router-dom';import{Form,Card}from'semantic-ui-react';import{TextArea,InputField}from'react-semantic-redux-form';import{Field,reduxForm}from'redux-form';var PostForm=function PostForm(props){var postsData=props.postsData,handleSubmit=props.handleSubmit,initialize=props.initialize,reset=props.reset,postId=props.match.params.postId;React.useEffect(function(){if(postId){initialize(postsData.find(function(post){return post.id===+postId;}));}},[postId,postsData,initialize]);var onSubmit=function onSubmit(){handleSubmit();reset();};return React.createElement(Card,{fluid:true,style:{top:'30%'}},React.createElement(Card.Content,null,React.createElement(Card.Header,null,postId?'Edit post':'Add post'),React.createElement(Form,{onSubmit:onSubmit},React.createElement(Form.Field,null,React.createElement(Field,{name:\"title\",component:InputField,placeholder:\"Enter post Title...\"})),React.createElement(Form.Field,null,React.createElement(Field,{name:\"body\",component:TextArea,placeholder:\"Enter post body...\"})),React.createElement(NavLink,{exact:true,to:\"/\",className:\"ui button\",onClick:onSubmit},postId?'Save':'Add'),postId&&React.createElement(NavLink,{exact:true,to:\"/\",className:\"ui button\",onClick:reset},\"Cancel\"))));};export default compose(reduxForm({form:'post'}),withRouter)(PostForm);","map":{"version":3,"sources":["/home/pavel/Desktop/React/unShiftTest/src/components/Posts/PostForm.jsx"],"names":["React","compose","withRouter","NavLink","Form","Card","TextArea","InputField","Field","reduxForm","PostForm","props","postsData","handleSubmit","initialize","reset","postId","match","params","useEffect","find","post","id","onSubmit","top","form"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,OAAxB,CACA,OAASC,UAAT,CAAqBC,OAArB,KAAoC,kBAApC,CACA,OAASC,IAAT,CAAeC,IAAf,KAA2B,mBAA3B,CACA,OAASC,QAAT,CAAmBC,UAAnB,KAAqC,2BAArC,CACA,OAASC,KAAT,CAAgBC,SAAhB,KAAiC,YAAjC,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,IAClBC,CAAAA,SADkB,CAC4DD,KAD5D,CAClBC,SADkB,CACPC,YADO,CAC4DF,KAD5D,CACPE,YADO,CACOC,UADP,CAC4DH,KAD5D,CACOG,UADP,CACmBC,KADnB,CAC4DJ,KAD5D,CACmBI,KADnB,CAC6CC,MAD7C,CAC4DL,KAD5D,CAC0BM,KAD1B,CACmCC,MADnC,CAC6CF,MAD7C,CAG1BhB,KAAK,CAACmB,SAAN,CAAgB,UAAM,CACpB,GAAGH,MAAH,CAAW,CACTF,UAAU,CAACF,SAAS,CAACQ,IAAV,CAAe,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,EAAL,GAAY,CAACN,MAAjB,EAAnB,CAAD,CAAV,CACD,CACF,CAJD,CAIG,CAACA,MAAD,CAASJ,SAAT,CAAoBE,UAApB,CAJH,EAMA,GAAMS,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrBV,YAAY,GACZE,KAAK,GACN,CAHD,CAKA,MACE,qBAAC,IAAD,EAAM,KAAK,KAAX,CAAY,KAAK,CAAE,CAACS,GAAG,CAAE,KAAN,CAAnB,EACE,oBAAC,IAAD,CAAM,OAAN,MACE,oBAAC,IAAD,CAAM,MAAN,MAAcR,MAAM,CAAG,WAAH,CAAiB,UAArC,CADF,CAEE,oBAAC,IAAD,EAAM,QAAQ,CAAEO,QAAhB,EACE,oBAAC,IAAD,CAAM,KAAN,MACE,oBAAC,KAAD,EACE,IAAI,CAAC,OADP,CACe,SAAS,CAAEhB,UAD1B,CAEE,WAAW,CAAC,qBAFd,EADF,CADF,CAME,oBAAC,IAAD,CAAM,KAAN,MACE,oBAAC,KAAD,EACE,IAAI,CAAC,MADP,CACc,SAAS,CAAED,QADzB,CAEE,WAAW,CAAC,oBAFd,EADF,CANF,CAWE,oBAAC,OAAD,EAAS,KAAK,KAAd,CAAe,EAAE,CAAC,GAAlB,CAAsB,SAAS,CAAC,WAAhC,CAA4C,OAAO,CAAEiB,QAArD,EACKP,MAAM,CAAG,MAAH,CAAY,KADvB,CAXF,CAcIA,MAAM,EACR,oBAAC,OAAD,EAAS,KAAK,KAAd,CAAe,EAAE,CAAC,GAAlB,CAAsB,SAAS,CAAC,WAAhC,CAA4C,OAAO,CAAED,KAArD,WAfF,CAFF,CADF,CADF,CA0BD,CAxCD,CA0CA,cAAed,CAAAA,OAAO,CACpBQ,SAAS,CAAC,CAACgB,IAAI,CAAE,MAAP,CAAD,CADW,CAEpBvB,UAFoB,CAAP,CAGbQ,QAHa,CAAf","sourcesContent":["import React from 'react';\nimport { compose } from 'redux';\nimport { withRouter, NavLink } from 'react-router-dom';\nimport { Form, Card } from 'semantic-ui-react';\nimport { TextArea, InputField } from 'react-semantic-redux-form';\nimport { Field, reduxForm } from 'redux-form';\n\nconst PostForm = (props) => {\n  const { postsData, handleSubmit, initialize, reset, match: { params: { postId } } } = props;\n\n  React.useEffect(() => {\n    if(postId) {\n      initialize(postsData.find(post => post.id === +postId));\n    }\n  }, [postId, postsData, initialize]);\n\n  const onSubmit = () => {\n    handleSubmit();\n    reset();\n  }\n\n  return (\n    <Card fluid style={{top: '30%'}}>\n      <Card.Content>\n        <Card.Header>{postId ? 'Edit post' : 'Add post'}</Card.Header>\n        <Form onSubmit={onSubmit}>\n          <Form.Field>\n            <Field \n              name='title' component={InputField}\n              placeholder='Enter post Title...' />\n          </Form.Field>\n          <Form.Field>\n            <Field \n              name='body' component={TextArea} \n              placeholder='Enter post body...' />\n          </Form.Field>\n          <NavLink exact to='/' className=\"ui button\" onClick={onSubmit}>\n              {postId ? 'Save' : 'Add'}\n          </NavLink>\n          { postId && \n          <NavLink exact to='/' className=\"ui button\" onClick={reset}>\n              Cancel\n          </NavLink>}\n        </Form>\n      </Card.Content>\n    </Card>\n  );\n}\n\nexport default compose(\n  reduxForm({form: 'post'}),\n  withRouter,\n)(PostForm);\n"]},"metadata":{},"sourceType":"module"}