{"ast":null,"code":"var _jsxFileName = \"/home/pavel/Desktop/React/unShiftTest/src/components/Container.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { postsDataSelector, editablePostSelector } from '../redux/app-selectors';\nimport { getPostsTC, addPostTC, deletePostTC, changeEditablePost, changePostTC, addCommentTC } from '../redux/app-reducer';\nimport { Grid } from 'semantic-ui-react';\nimport PostForm from './Posts/PostForm';\nimport Posts from './Posts/Posts';\n\nconst Container = props => {\n  const postsData = props.postsData,\n        getPostsData = props.getPostsData,\n        addPost = props.addPost,\n        deletePost = props.deletePost,\n        changeEditablePost = props.changeEditablePost,\n        editablePost = props.editablePost,\n        changePost = props.changePost,\n        addComment = props.addComment;\n  React.useEffect(() => {\n    getPostsData();\n  }, [getPostsData]);\n  return React.createElement(Grid, {\n    container: true,\n    centered: true,\n    columns: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/edit/:postId?\",\n    render: () => React.createElement(PostForm, {\n      editablePost: editablePost,\n      onSubmit: changePost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: () => React.createElement(Posts, {\n      postsData: postsData,\n      addPost: addPost,\n      deletePost: deletePost,\n      changeEditablePost: changeEditablePost,\n      editablePost: editablePost,\n      addComment: addComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    postsData: postsDataSelector(state),\n    editablePost: editablePostSelector(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getPostsData: () => dispatch(getPostsTC()),\n    addPost: post => dispatch(addPostTC(post)),\n    deletePost: postId => dispatch(deletePostTC(postId)),\n    changeEditablePost: post => dispatch(changeEditablePost(post)),\n    changePost: post => dispatch(changePostTC(post)),\n    addComment: (comment, postId) => dispatch(addCommentTC(comment, postId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Container);","map":{"version":3,"sources":["/home/pavel/Desktop/React/unShiftTest/src/components/Container.jsx"],"names":["React","Route","connect","postsDataSelector","editablePostSelector","getPostsTC","addPostTC","deletePostTC","changeEditablePost","changePostTC","addCommentTC","Grid","PostForm","Posts","Container","props","postsData","getPostsData","addPost","deletePost","editablePost","changePost","addComment","useEffect","mapStateToProps","state","mapDispatchToProps","dispatch","post","postId","comment"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { postsDataSelector, editablePostSelector } from '../redux/app-selectors';\nimport { getPostsTC, addPostTC, deletePostTC, changeEditablePost, changePostTC, addCommentTC } from '../redux/app-reducer';\nimport { Grid } from 'semantic-ui-react';\nimport PostForm from './Posts/PostForm';\nimport Posts from './Posts/Posts';\n\nconst Container = (props) => {\n  const { \n    postsData, getPostsData, addPost, \n    deletePost, changeEditablePost, \n    editablePost, changePost, addComment } = props;\n\n  React.useEffect(()=> {\n    getPostsData();\n  },[getPostsData])\n\n  return (\n    <Grid container centered columns={10}>\n      <Route path='/edit/:postId?' render={() => <PostForm editablePost={editablePost} onSubmit={changePost}/>} />\n      <Route exact path='/' render={() => <Posts \n        postsData={postsData}\n        addPost={addPost} \n        deletePost={deletePost}\n        changeEditablePost={changeEditablePost}\n        editablePost={editablePost}\n        addComment={addComment}/>} />\n \n    </Grid>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    postsData: postsDataSelector(state),\n    editablePost: editablePostSelector(state),\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getPostsData: () => dispatch(getPostsTC()),\n    addPost: (post) => dispatch(addPostTC(post)),\n    deletePost: (postId) => dispatch(deletePostTC(postId)),\n    changeEditablePost: (post) => dispatch(changeEditablePost(post)),\n    changePost: (post) => dispatch(changePostTC(post)),\n    addComment: (comment, postId) => dispatch(addCommentTC(comment, postId)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Container);"]},"metadata":{},"sourceType":"module"}