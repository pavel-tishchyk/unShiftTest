{"ast":null,"code":"import _objectSpread from \"/home/pavel/Desktop/React/unShiftTest/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport apiRequests from './../api/api';\nconst SET_POSTS = 'SET_POSTS';\nconst ADD_POST = 'ADD_POST';\nconst CHANGE_POST = 'EDIT_POST';\nconst DELETE_POST = 'DELETE_POST';\nconst ADD_COMMENT = 'ADD_COMMENT';\nconst initialState = {\n  postsData: [],\n  commentsData: []\n};\n\nconst appReducer = (appData = initialState, action) => {\n  switch (action.type) {\n    case SET_POSTS:\n      {\n        return _objectSpread({}, appData, {\n          postsData: action.posts\n        });\n      }\n\n    case ADD_POST:\n      {\n        return _objectSpread({}, appData, {\n          postsData: [...appData.postsData, action.post]\n        });\n      }\n\n    case CHANGE_POST:\n      {\n        return _objectSpread({}, appData, {\n          postsData: appData.postsData.map(post => {\n            return post.id !== action.post.id ? post : action.post;\n          })\n        });\n      }\n\n    case DELETE_POST:\n      {\n        return _objectSpread({}, appData, {\n          postsData: appData.postsData.filter(post => {\n            return post.id !== action.postId ? true : false;\n          })\n        });\n      }\n\n    case ADD_COMMENT:\n      {\n        return _objectSpread({}, appData, {\n          commentsData: [...appData.commentsData, action.comment]\n        });\n      }\n\n    default:\n      return appData;\n  }\n};\n\nexport const setPosts = posts => {\n  return {\n    type: SET_POSTS,\n    posts\n  };\n};\nexport const addPost = post => {\n  return {\n    type: ADD_POST,\n    post\n  };\n};\nexport const changePost = post => {\n  return {\n    type: CHANGE_POST,\n    post\n  };\n};\nexport const deletePost = postId => {\n  return {\n    type: DELETE_POST,\n    postId\n  };\n};\nexport const addComment = comment => {\n  return {\n    type: ADD_POST,\n    comment\n  };\n};\nexport const getPostsTC = () => dispatch => {\n  apiRequests.getPostsData().then(data => dispatch(setPosts(data)));\n};\nexport const addPostTC = post => dispatch => {\n  console.log(post); //запрос\n  // dispatch(addPosts(post));\n};\nexport const changePostTC = post => dispatch => {\n  //запрос\n  dispatch(changePost(post));\n};\nexport const deletePostTC = postId => dispatch => {\n  apiRequests.deletePost(postId).then(data => dispatch(deletePost(postId)));\n};\nexport const addCommentTC = comment => dispatch => {\n  //запрос\n  dispatch(addComment(comment));\n};\nexport default appReducer;","map":{"version":3,"sources":["/home/pavel/Desktop/React/unShiftTest/src/redux/app-reducer.js"],"names":["apiRequests","SET_POSTS","ADD_POST","CHANGE_POST","DELETE_POST","ADD_COMMENT","initialState","postsData","commentsData","appReducer","appData","action","type","posts","post","map","id","filter","postId","comment","setPosts","addPost","changePost","deletePost","addComment","getPostsTC","dispatch","getPostsData","then","data","addPostTC","console","log","changePostTC","deletePostTC","addCommentTC"],"mappings":"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","sourcesContent":["import apiRequests from './../api/api';\n\nconst SET_POSTS = 'SET_POSTS';\nconst ADD_POST = 'ADD_POST';\nconst CHANGE_POST = 'EDIT_POST';\nconst DELETE_POST = 'DELETE_POST';\nconst ADD_COMMENT = 'ADD_COMMENT';\n\nconst initialState = {\n    postsData: [],\n    commentsData: [],\n};\n\nconst appReducer = (appData = initialState, action) => {\n    switch (action.type) {\n        case SET_POSTS: {\n            return {\n                ...appData,\n                postsData: action.posts,\n            }\n        }\n\n        case ADD_POST: {\n            return {\n                ...appData,\n                postsData: [...appData.postsData, action.post],\n            }\n        }    \n        \n        case CHANGE_POST: {\n            return {\n                ...appData,\n                postsData: appData.postsData.map(post => {\n                    return post.id !== action.post.id ? post : action.post \n                })\n            }\n        } \n\n        case DELETE_POST: {\n            return {\n                ...appData,\n                postsData: appData.postsData.filter(post => {\n                    return post.id !== action.postId ? true : false \n                })\n            }\n        }\n\n        case ADD_COMMENT: {\n            return {\n                ...appData,\n                commentsData: [...appData.commentsData, action.comment],\n            }\n        }\n\n        default: return appData;\n    }\n\n}\n\nexport const setPosts = (posts) => {\n    return {\n        type: SET_POSTS,\n        posts\n    }\n}\n\nexport const addPost = (post) => {\n    return {\n        type: ADD_POST,\n        post\n    }\n}\n\nexport const changePost = (post) => {\n    return {\n        type: CHANGE_POST,\n        post\n    }\n}\n\nexport const deletePost = (postId) => {\n    return {\n        type: DELETE_POST,\n        postId\n    }\n}\n\nexport const addComment = (comment) => {\n    return {\n        type: ADD_POST,\n        comment\n    }\n}\n\nexport const getPostsTC = () => (dispatch) => {\n    apiRequests.getPostsData()\n    .then(data => dispatch(setPosts(data)));\n    \n}\n\nexport const addPostTC = (post) => (dispatch) => {\n    console.log(post)\n    //запрос\n    // dispatch(addPosts(post));\n}\n\nexport const changePostTC = (post) => (dispatch) => {\n    //запрос\n    dispatch(changePost(post))\n}\n\nexport const deletePostTC = (postId) => (dispatch) => {\n    apiRequests.deletePost(postId)\n    .then(data => dispatch(deletePost(postId)));\n}\n\nexport const addCommentTC = (comment) => (dispatch) => {\n    //запрос\n    dispatch(addComment(comment));\n}\n\nexport default appReducer;"]},"metadata":{},"sourceType":"module"}