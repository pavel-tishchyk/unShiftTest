{"ast":null,"code":"var _jsxFileName = \"/home/pavel/Desktop/React/unShiftTest/src/components/Container.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { postsDataSelector } from '../redux/app-selectors';\nimport { getPostsTC, addPostsTC, deletePostTC } from '../redux/app-reducer';\nimport { Grid } from 'semantic-ui-react';\nimport PostForm from './Posts/PostForm';\nimport Posts from './Posts/Posts';\n\nconst Container = props => {\n  const postsData = props.postsData,\n        getPostsData = props.getPostsData,\n        deletePost = props.deletePost;\n  React.useEffect(() => {\n    getPostsData();\n  }, [getPostsData]);\n  return React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Posts, {\n    postsData: postsData,\n    addPosts: addPosts,\n    deletePost: deletePost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    postsData: postsDataSelector(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getPostsData: () => dispatch(getPostsTC()),\n    addPosts: post => dispatch(addPostsTC(post)),\n    deletePost: postId => dispatch(deletePostTC(postId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Container);","map":{"version":3,"sources":["/home/pavel/Desktop/React/unShiftTest/src/components/Container.jsx"],"names":["React","Route","connect","postsDataSelector","getPostsTC","addPostsTC","deletePostTC","Grid","PostForm","Posts","Container","props","postsData","getPostsData","deletePost","useEffect","addPosts","mapStateToProps","state","mapDispatchToProps","dispatch","post","postId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,wBAAlC;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,YAAjC,QAAqD,sBAArD;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,eAAlB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA,QACnBC,SADmB,GACqBD,KADrB,CACnBC,SADmB;AAAA,QACRC,YADQ,GACqBF,KADrB,CACRE,YADQ;AAAA,QACMC,UADN,GACqBH,KADrB,CACMG,UADN;AAG3Bd,EAAAA,KAAK,CAACe,SAAN,CAAgB,MAAK;AACnBF,IAAAA,YAAY;AACb,GAFD,EAEE,CAACA,YAAD,CAFF;AAIA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAED,SADb;AAEE,IAAA,QAAQ,EAAEI,QAFZ;AAGE,IAAA,UAAU,EAAEF,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AASD,CAhBD;;AAkBA,MAAMG,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLN,IAAAA,SAAS,EAAET,iBAAiB,CAACe,KAAD;AADvB,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLP,IAAAA,YAAY,EAAE,MAAMO,QAAQ,CAAChB,UAAU,EAAX,CADvB;AAELY,IAAAA,QAAQ,EAAGK,IAAD,IAAUD,QAAQ,CAACf,UAAU,CAACgB,IAAD,CAAX,CAFvB;AAGLP,IAAAA,UAAU,EAAGQ,MAAD,IAAYF,QAAQ,CAACd,YAAY,CAACgB,MAAD,CAAb;AAH3B,GAAP;AAKD,CAND;;AAQA,eAAepB,OAAO,CAACe,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CT,SAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { postsDataSelector } from '../redux/app-selectors';\nimport { getPostsTC, addPostsTC, deletePostTC } from '../redux/app-reducer';\nimport { Grid } from 'semantic-ui-react';\nimport PostForm from './Posts/PostForm';\nimport Posts from './Posts/Posts';\n\nconst Container = (props) => {\n  const { postsData, getPostsData, deletePost } = props;\n\n  React.useEffect(()=> {\n    getPostsData();\n  },[getPostsData])\n\n  return (\n    <Grid>\n      {/* <Route path='/edit/:postId?' render={() => <PostForm />} /> */}\n      <Posts \n        postsData={postsData}\n        addPosts={addPosts} \n        deletePost={deletePost}/>\n    </Grid>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    postsData: postsDataSelector(state),\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getPostsData: () => dispatch(getPostsTC()),\n    addPosts: (post) => dispatch(addPostsTC(post)),\n    deletePost: (postId) => dispatch(deletePostTC(postId)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Container);"]},"metadata":{},"sourceType":"module"}