{"ast":null,"code":"import React from'react';import CommentCard from'./CommentCard';import CommentForm from'./CommentForm';import{Comment,Header}from'semantic-ui-react';var Comments=function Comments(props){var commentsData=props.commentsData,addComment=props.addComment,postId=props.postId;var commentsElements=commentsData.map(function(comment){return React.createElement(CommentCard,{key:comment.id,comment:comment});});var onSubmit=function onSubmit(comment){addComment(comment,postId);};return React.createElement(Comment.Group,{size:\"mini\"},React.createElement(Header,{as:\"h5\"},\"Comments\"),commentsElements,React.createElement(CommentForm,{onSubmit:onSubmit,form:\"comment_post_\".concat(postId)}));};export default Comments;","map":{"version":3,"sources":["/home/pavel/Desktop/React/unShiftTest/src/components/Posts/Comments/Comments.jsx"],"names":["React","CommentCard","CommentForm","Comment","Header","Comments","props","commentsData","addComment","postId","commentsElements","map","comment","id","onSubmit"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,OAASC,OAAT,CAAkBC,MAAlB,KAAgC,mBAAhC,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,IAClBC,CAAAA,YADkB,CACmBD,KADnB,CAClBC,YADkB,CACJC,UADI,CACmBF,KADnB,CACJE,UADI,CACQC,MADR,CACmBH,KADnB,CACQG,MADR,CAG1B,GAAMC,CAAAA,gBAAgB,CAAGH,YAAY,CAACI,GAAb,CAAiB,SAAAC,OAAO,QAAI,qBAAC,WAAD,EAAa,GAAG,CAAEA,OAAO,CAACC,EAA1B,CAA8B,OAAO,CAAED,OAAvC,EAAJ,EAAxB,CAAzB,CAEA,GAAME,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACF,OAAD,CAAa,CAC5BJ,UAAU,CAACI,OAAD,CAAUH,MAAV,CAAV,CACD,CAFD,CAIA,MACE,qBAAC,OAAD,CAAS,KAAT,EAAe,IAAI,CAAC,MAApB,EACE,oBAAC,MAAD,EAAQ,EAAE,CAAC,IAAX,aADF,CAIGC,gBAJH,CAKE,oBAAC,WAAD,EAAa,QAAQ,CAAEI,QAAvB,CAAiC,IAAI,wBAAkBL,MAAlB,CAArC,EALF,CADF,CASD,CAlBD,CAoBA,cAAeJ,CAAAA,QAAf","sourcesContent":["import React from 'react';\nimport CommentCard from './CommentCard';\nimport CommentForm from './CommentForm';\nimport { Comment, Header } from 'semantic-ui-react';\n\nconst Comments = (props) => {\n  const { commentsData, addComment, postId } = props;\n\n  const commentsElements = commentsData.map(comment => <CommentCard key={comment.id} comment={comment}/>) \n\n  const onSubmit = (comment) => {\n    addComment(comment, postId)\n  }\n\n  return (\n    <Comment.Group size='mini'>\n      <Header as='h5'>\n        Comments\n      </Header>\n      {commentsElements}\n      <CommentForm onSubmit={onSubmit} form={`comment_post_${postId}`}/>\n    </Comment.Group>\n  );\n}\n\nexport default Comments;"]},"metadata":{},"sourceType":"module"}