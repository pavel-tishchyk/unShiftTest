{"ast":null,"code":"import React from'react';import{Route}from'react-router-dom';import{connect}from'react-redux';import{postsDataSelector}from'../redux/app-selectors';import{getPostsTC,addPostTC,deletePostTC,changePostTC,addCommentTC}from'../redux/app-reducer';import{Grid}from'semantic-ui-react';import PostForm from'./Posts/PostForm';import Posts from'./Posts/Posts';var Container=function Container(props){var postsData=props.postsData,getPostsData=props.getPostsData,addPost=props.addPost,deletePost=props.deletePost,changePost=props.changePost,addComment=props.addComment;React.useEffect(function(){getPostsData();},[getPostsData]);return React.createElement(Grid,{container:true,centered:true},React.createElement(Grid.Row,null,React.createElement(Grid.Column,{mobile:16,computer:10,largeScreen:8,style:{minHeight:'100vh'}},React.createElement(Route,{path:\"/edit/:postId?\",render:function render(){return React.createElement(PostForm,{postsData:postsData,onSubmit:changePost});}}),React.createElement(Route,{exact:true,path:\"/\",render:function render(props){return React.createElement(Posts,Object.assign({},props,{postsData:postsData,addPost:addPost,deletePost:deletePost,addComment:addComment}));}}))));};var mapStateToProps=function mapStateToProps(state){return{postsData:postsDataSelector(state)};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{getPostsData:function getPostsData(){return dispatch(getPostsTC());},addPost:function addPost(post){return dispatch(addPostTC(post));},deletePost:function deletePost(postId){return dispatch(deletePostTC(postId));},changePost:function changePost(post){return dispatch(changePostTC(post));},addComment:function addComment(comment,postId){return dispatch(addCommentTC(comment,postId));}};};var mdtp={getPostsTC:getPostsTC};export default connect(mapStateToProps,mapDispatchToProps)(Container);","map":{"version":3,"sources":["/home/pavel/Desktop/React/unShiftTest/src/components/Container.jsx"],"names":["React","Route","connect","postsDataSelector","getPostsTC","addPostTC","deletePostTC","changePostTC","addCommentTC","Grid","PostForm","Posts","Container","props","postsData","getPostsData","addPost","deletePost","changePost","addComment","useEffect","minHeight","mapStateToProps","state","mapDispatchToProps","dispatch","post","postId","comment","mdtp"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { postsDataSelector } from '../redux/app-selectors';\nimport { getPostsTC, addPostTC, deletePostTC, changePostTC, addCommentTC } from '../redux/app-reducer';\nimport { Grid } from 'semantic-ui-react';\nimport PostForm from './Posts/PostForm';\nimport Posts from './Posts/Posts';\n\nconst Container = (props) => {\n  const { \n    postsData, getPostsData, addPost, \n    deletePost, changePost, addComment } = props;\n\n  React.useEffect(()=> {\n    getPostsData();\n  },[getPostsData])\n\n  return (\n    <Grid container centered>\n      <Grid.Row>\n        <Grid.Column mobile={16} computer={10} largeScreen={8} style={{minHeight: '100vh'}}>\n          <Route path='/edit/:postId?' render={() => <PostForm \n            postsData={postsData} \n            onSubmit={changePost}/>} />\n          <Route exact path='/' render={(props) => <Posts \n            {...props}\n            postsData={postsData}\n            addPost={addPost} \n            deletePost={deletePost}\n            addComment={addComment}/>} />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    postsData: postsDataSelector(state),\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getPostsData: () => dispatch(getPostsTC()),\n    addPost: (post) => dispatch(addPostTC(post)),\n    deletePost: (postId) => dispatch(deletePostTC(postId)),\n    changePost: (post) => dispatch(changePostTC(post)),\n    addComment: (comment, postId) => dispatch(addCommentTC(comment, postId)),\n  }\n}\n\nconst mdtp = {\n  getPostsTC\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Container);"]},"metadata":{},"sourceType":"module"}